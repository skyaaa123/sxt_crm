<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shsxt.crm.dao.RoleDao" >
  <resultMap id="BaseResultMap" type="com.shsxt.crm.po.Role" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="role_remark" property="roleRemark" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="is_valid" property="isValid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, role_name, role_remark, create_date, update_date, is_valid
  </sql>
  <select id="queryById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <insert id="save" parameterType="com.shsxt.crm.po.Role" >
    insert into t_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="roleRemark != null" >
        role_remark,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="isValid != null" >
        is_valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleRemark != null" >
        #{roleRemark,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isValid != null" >
        #{isValid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="com.shsxt.crm.po.Role" >
    update t_role
    <set >
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleRemark != null" >
        role_remark = #{roleRemark,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isValid != null" >
        is_valid = #{isValid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="queryAllRoles" resultMap="BaseResultMap">
    SELECT
    t_role.id,
    t_role.role_name
    FROM
    t_role
    WHERE
    t_role.is_valid = 1
  </select>

  <select id="queryRolesByUserId" resultType="userRole" parameterType="int">
    SELECT
    id,
    user_id,
    role_id,
    create_date,
    update_date
    FROM
    t_user_role
    WHERE
    user_id=#{userId}
  </select>

  <delete id="delRolesByUserId">
    DELETE FROM t_user_role where user_id=#{userId}
  </delete>

  <insert id="saveBatchUserRoles">
    INSERT  INTO  t_user_role(user_id, role_id, create_date, update_date)
    VALUES
    <foreach collection="list" separator="," index="index" item="item">
      (#{item.userId}, #{item.roleId}, #{item.createDate}, #{item.updateDate})
    </foreach>
  </insert>

  <!-- 参数查询 -->
  <select id="queryByParams" parameterType="roleQuery" resultMap="BaseResultMap">
    SELECT * from t_role
    <where>
      is_valid=1
      <if test="null!=roleName and ''!=roleName">
        and role_name like concat('%',#{roleName},'%')
      </if>
      <if test="null!=createDate and ''!=createDate">
        and create_date &lt;=#{createDate}
      </if>
    </where>
  </select>

  <select id="queryAllModuleByRoleId" parameterType="int" resultType="moduleDto">
    SELECT
    m.id,
    m.parent_id as pId,
    m.module_name as name,
    rp.module_id as checked
    FROM
    t_module AS m
    left JOIN
    (
        SELECT
    p.role_id,
    p.module_id
    FROM
    t_permission AS p
    WHERE
    p.role_id = #{roleId}
    ) as rp
    on rp.module_id=m.id
  </select>

  <!-- 删除 -->
  <update id="deleteBatch">
    UPDATE t_role SET is_valid=0
    WHERE id in (
    <foreach collection="array" index="index" item="item" separator=",">
      #{item}
    </foreach>
    )
  </update>

  <!-- 通过roleId 删除 t_user_role 关联表的数据 -->
  <delete id="deleteRolesByRoleId" parameterType="int">
    DELETE FROM t_user_role WHERE role_id=#{roleId}
  </delete>

  <!-- 通过roleId 查询有没有用户管理该角色 -->
  <select id="queryRolesByRoleId" parameterType="int" resultType="int">
    SELECT count(1) FROM t_user_role WHERE role_id=#{roleId}
  </select>
</mapper>